pipeline {
    agent any

    tools {
        maven 'M3'  // Assurez-vous que Maven est installé et que le nom est correct
    }

    environment {
        // Définir des variables d'environnement pour PostgreSQL
        POSTGRES_HOST = "localhost"
        POSTGRES_PORT = "5432"
        POSTGRES_DB = "petclinic"
        POSTGRES_USER = "user"
        POSTGRES_PASSWORD = "password"
    }

    stages {
       stage('Clone Repository') {
    steps {
        script {
            // Vérifier si le répertoire existe avant de cloner
            def repoDir = 'spring-petclinic'
            if (!fileExists(repoDir)) {
                bat "git clone https://github.com/Fzsalhi2002/spring-petclinic.git"
            } else {
                echo "Le dépôt existe déjà dans le répertoire ${repoDir}, passage à l'étape suivante."
            }
        }
    }
}


       

        stage('Build') {
            steps {
                dir('spring-petclinic') {
                    // Construction du projet avec Maven
                    bat 'mvnw.cmd clean install'
                }
            }
        }

        stage('Test') {
            steps {
                dir('spring-petclinic') {
                    // Exécuter les tests avec le profil PostgreSQL
                    bat 'mvnw.cmd test -Dspring.profiles.active=postgres'
                }
            }
        }

        stage('Package') {
            steps {
                dir('spring-petclinic') {
                    // Emballer l'application pour la production
                    bat 'mvnw.cmd package'
                }
            }
        }
    }

    post {
        success {
            echo "Build and tests succeeded!"
        }
        failure {
            echo "Build failed!"
        }
    }
}
