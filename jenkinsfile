pipeline {
    agent any

    tools {
        maven 'M3'  // Assurez-vous que Maven est installé et que le nom est correct
    }

    environment {
        // Définir des variables d'environnement pour PostgreSQL
        POSTGRES_HOST = "localhost"
        POSTGRES_PORT = "5432"
        POSTGRES_DB = "petclinic"
        POSTGRES_USER = "user"
        POSTGRES_PASSWORD = "password"
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    // Cloner le dépôt Git
                    bat 'git clone https://github.com/Fzsalhi2002/spring-petclinic.git'
                }
            }
        }

        stage('Start PostgreSQL') {
            steps {
                script {
                    // Lancer un conteneur Docker PostgreSQL pour les tests
                    def postgresContainer = docker.image('postgres:latest')
                    postgresContainer.run('-d -e POSTGRES_DB=${POSTGRES_DB} -e POSTGRES_USER=${POSTGRES_USER} -e POSTGRES_PASSWORD=${POSTGRES_PASSWORD} -p ${POSTGRES_PORT}:${POSTGRES_PORT}')
                    // Attendre que le conteneur soit prêt (ajustez le délai en fonction de la vitesse de démarrage de votre machine)
                    sleep(time: 30, unit: 'SECONDS')
                }
            }
        }

        stage('Build') {
            steps {
                dir('spring-petclinic') {
                    // Construction du projet avec Maven
                    bat 'mvnw.cmd clean install'
                }
            }
        }

        stage('Test') {
            steps {
                dir('spring-petclinic') {
                    // Exécuter les tests avec le profil PostgreSQL
                    bat 'mvnw.cmd test -Dspring.profiles.active=postgres'
                }
            }
        }

        stage('Package') {
            steps {
                dir('spring-petclinic') {
                    // Emballer l'application pour la production
                    bat 'mvnw.cmd package'
                }
            }
        }
    }

    post {
        success {
            echo "Build and tests succeeded!"
        }
        failure {
            echo "Build failed!"
        }
    }
}
